// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init
generator client {
  provider = "prisma-client-js"
  binaryTargets = ["native", "rhel-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String          @id @default(cuid())
  clerkId       String          @unique
  email         String          @unique
  firstName     String?
  lastName      String?
  imageUrl      String?
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
  emails        Email[]
  emailAccounts EmailAccount[]
  voiceSettings VoiceSettings?
  subscription  Subscription?
}

model EmailAccount {
  id           String   @id @default(cuid())
  userId       String
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  provider     String   // gmail, outlook, etc.
  email        String
  accessToken  String   @db.Text
  refreshToken String?  @db.Text
  tokenExpiry  DateTime?
  isActive     Boolean  @default(true)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  
  @@unique([userId, email])
  @@index([userId])
  @@index([email])
}

model Email {
  id            String    @id @default(cuid())
  userId        String
  user          User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  accountEmail  String
  externalId    String
  threadId      String?
  subject       String    @db.Text
  from          String
  to            String[]
  cc            String[]  @default([])
  bcc           String[]  @default([])
  body          String    @db.Text
  bodyHtml      String?   @db.Text
  snippet       String?   @db.Text
  receivedAt    DateTime
  folder        String    @default("inbox")
  labels        String[]  @default([])
  isProcessed   Boolean   @default(false)
  audioUrl      String?
  summary       String?   @db.Text
  urgencyLevel  String?
  isLead        Boolean   @default(false)
  isJobOffer    Boolean   @default(false)
  isJunk        Boolean?
  junkConfirmed Boolean   @default(false)
  aiReason      String?   @db.Text
  confidence    Float?
  hasAttachments Boolean  @default(false)
  isRead        Boolean   @default(false)
  isStarred     Boolean   @default(false)
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  insights      Insight[]
  attachments   Attachment[]

  @@unique([userId, externalId])
  @@index([userId, folder])
  @@index([userId, isProcessed])
  @@index([userId, isJunk])
  @@index([userId, receivedAt])
  @@index([accountEmail])
}

model Insight {
  id         String   @id @default(cuid())
  emailId    String
  email      Email    @relation(fields: [emailId], references: [id], onDelete: Cascade)
  type       String
  value      String   @db.Text
  confidence Float
  metadata   Json?
  createdAt  DateTime @default(now())

  @@index([emailId])
  @@index([type])
}

model Attachment {
  id          String   @id @default(cuid())
  emailId     String
  email       Email    @relation(fields: [emailId], references: [id], onDelete: Cascade)
  externalId  String
  filename    String
  mimeType    String
  size        Int
  url         String?
  createdAt   DateTime @default(now())

  @@index([emailId])
}

model VoiceSettings {
  id               String   @id @default(cuid())
  userId           String   @unique
  user             User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  voiceId          String   @default("21m00Tcm4TlvDq8ikWAM")
  voiceName        String   @default("Rachel")
  modelId          String   @default("eleven_turbo_v2_5")
  stability        Float    @default(0.6)
  similarityBoost  Float    @default(0.8)
  style            Float    @default(0.2)
  useSpeakerBoost  Boolean  @default(true)
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt
  
  @@index([userId])
}

model Subscription {
  id                String    @id @default(cuid())
  userId            String    @unique
  user              User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  plan              String    // starter, professional, business
  status            String    // active, cancelled, expired
  emailsProcessed   Int       @default(0)
  emailsLimit       Int       @default(50)
  currentPeriodStart DateTime
  currentPeriodEnd   DateTime
  cancelAtPeriodEnd Boolean  @default(false)
  createdAt         DateTime  @default(now())
  updatedAt         DateTime  @updatedAt

  @@index([userId])
  @@index([status])
}

model AudioFile {
  id          String   @id @default(cuid())
  userId      String
  emailId     String?
  filename    String
  url         String
  duration    Float?
  size        Int
  mimeType    String   @default("audio/mpeg")
  createdAt   DateTime @default(now())

  @@index([userId])
  @@index([emailId])
}